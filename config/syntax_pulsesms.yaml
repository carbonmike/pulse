#
# config file for Pulse SMS dialog engine
#

globals:
  system_id: pulse
  network_id: fsny
  service_module: pulse_sms_services
  sms_command_handler_module: sms_handlers

service_objects:
  sms:
    class: SMSService
    init_params:
      - name: account_sid
        value: $TWILIO_ACCT_SID

      - name: auth_token
        value: $TWILIO_AUTH_TOKEN

      - name: source_mobile_number
        value: "9178102234"

#        
# Commands that direct the system to do something OR update the user's status
#
# (The command names are quoted because the YAML parser reads certain words (such as "on" and "off") incorrectly
# as booleans.
#
system_commands:
  'on':
    definition: 'Go on-line' # string describing what the command does
    arg_required: False # boolean; does the command require an argument?
    synonyms: []

  'off':
    definition: 'Go off-line'
    arg_required: False
    synonyms: []

  'con':
    definition: "Connect to a user's stream"
    arg_required: True
    synonyms: []

  'dis':
    definition: "Disconnect from a user's stream"
    arg_required: True
    synonyms: []

  'mute':
    definition: "Mute (but still retain) incoming messages"
    arg_required: False     
    synonyms: ['m']

  'unmute':
    definition: "Unmute incoming messages"
    arg_required: False
    synonyms: ['um']

  'snd':
    definition: 'Send message'
    arg_required: True
    synonyms: []

  'fwd':
    definition: 'Forward message'
    arg_required: True
    synonyms: []
  
  'arc':
    definition: 'Archive message'
    arg_required: True 
    synonyms: []

  'det':
    definition: 'View message details'
    arg_required: True
    synonyms: ['dt']

  'hlp':
    definition: 'Display help prompts'
    arg_required: False
    synonyms: ['?']

# commands that emit a (full or partial) list of data items
generator_commands:
  my:
    definition: 'List my messages' 
    specifier: '.'    # separator, usually '.'
    filter_char: '?' 

  msg:
    definition: 'Display messages from user'
    specifier: '.'
    filter_char: '?'

#
# The command name (its "tag") plus an alphanumeric designator, make up the prefix.
# The prefix is separated from the (optional) command body by the defchar.
# A function command has two forms:
#   the form containing no body (just a prefix) is its "call" form.
#   the form containing a body is its "define" form.

function_commands:
  '$':
    definition: 'Create a user-defined macro'  
    separator: ':'  # separator character between the prefix and the command body

  '@':
    definition: 'Send a message to a user via his or her handle'
    separator: ':'

  '&':
    definition: 'Create a user handle for yourself'
    separator: ' '

  '#':
    definition: 'Create (or look) up an abbreviation'
    separator: ':'


